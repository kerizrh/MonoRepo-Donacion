version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql-db
    restart: unless-stopped
    env_file:
    - .env
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
    - app-network
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pdonpass"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: spring-backend
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file:
    - .env
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        BUILD_CONFIG: ${BUILD_CONFIG:-production}
    container_name: angular-frontend
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
